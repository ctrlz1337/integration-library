// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka-android'

android {
    def version = 100 // special for jewel product type support

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 23
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 29
        versionCode version
        versionName "0.4.9"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        resValue "integer", "versionCodeIntegrationLibrary", "$version"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.31"

    implementation 'com.github.evotor:push-notifications:v0.2.1'
    implementation 'com.github.evotor:query-api:1.0.0'

    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'junit:junit:4.13.2'
}

repositories {
    mavenCentral()
    google()
}

buildscript {
    ext.kotlin_version = '1.4.31'
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18"
    }
}
// in the individual module build.gradle files

allprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

dokka {
    moduleName = 'integration-library'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"

    includes = ['packages.md']

}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/dokkaJavadoc"

    includes = ['packages.md']
}

task dokkaHTMLAsJava(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "html-as-java"
    outputDirectory = "$buildDir/dokkaHtmlasjava"

    includes = ['packages.md']
}

task dokkaHTML(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "html"
    outputDirectory = "$buildDir/dokkaHtml"

    includes = ['packages.md']
}

task sourceJar(type: Jar) {
    classifier "sources"
    from android.sourceSets.main.java.srcDirs
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

publishing {
    publications {
        mavenKotlin(MavenPublication) {
            groupId 'com.github.evotor'
            artifactId "integration-library"
            version "STDEV-5035"
            artifact(sourceJar)
            artifact(javadocJar)
            artifact "${project.buildDir}/outputs/aar/${project.archivesBaseName}-release.aar"

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    if (dependency.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }
}
